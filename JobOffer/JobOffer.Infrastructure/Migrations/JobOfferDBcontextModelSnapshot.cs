// <auto-generated />
using System;
using JobOffer.infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JobOffer.Infrastructure.Migrations
{
    [DbContext(typeof(JobOfferDBcontext))]
    partial class JobOfferDBcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.30");

            modelBuilder.Entity("JobOffer.Domain.Models.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Experiencia")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("Idiomas")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(45);

                    b.Property<string>("NivelCompeteciaDigitais")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(60);

                    b.Property<int>("NivelEscolaridade")
                        .HasColumnType("INTEGER")
                        .HasMaxLength(40);

                    b.Property<int>("NivelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(80);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("NivelId");

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("JobOffer.Domain.Models.Candidato_vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT")
                        .HasMaxLength(45);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Estado_da_Candidatura")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(45);

                    b.Property<int>("VagaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VagaId1")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("VagaId");

                    b.HasIndex("VagaId1");

                    b.ToTable("Candidato_has_vagas");
                });

            modelBuilder.Entity("JobOffer.Domain.Models.Cargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("JobOffer.Domain.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("JobOffer.Domain.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(45);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Disponivel"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Analise"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Ocupado"
                        });
                });

            modelBuilder.Entity("JobOffer.Domain.Models.Nivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Nivels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Iniciante"
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Medio"
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Master"
                        });
                });

            modelBuilder.Entity("JobOffer.Domain.Models.Recrutador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Recrutadores");
                });

            modelBuilder.Entity("JobOffer.Domain.Models.Vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CargoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EstadoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Horario")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<int>("N_vaga")
                        .HasColumnType("INTEGER")
                        .HasMaxLength(100);

                    b.Property<int>("RecrutadorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Regime")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(255);

                    b.Property<string>("Tipo_contrato")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CargoId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("RecrutadorId");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("JobOffer.Domain.Models.Candidato", b =>
                {
                    b.HasOne("JobOffer.Domain.Models.Nivel", null)
                        .WithMany("Candidatos")
                        .HasForeignKey("NivelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobOffer.Domain.Models.Candidato_vaga", b =>
                {
                    b.HasOne("JobOffer.Domain.Models.Candidato", "Candidato")
                        .WithMany("Candidato_Vagas")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobOffer.Domain.Models.Vaga", "Vaga")
                        .WithMany("Candidato_Vagas")
                        .HasForeignKey("VagaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobOffer.Domain.Models.Vaga", null)
                        .WithMany("Candidato_Has_Vagas")
                        .HasForeignKey("VagaId1");
                });

            modelBuilder.Entity("JobOffer.Domain.Models.Vaga", b =>
                {
                    b.HasOne("JobOffer.Domain.Models.Cargo", null)
                        .WithMany("vagas")
                        .HasForeignKey("CargoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobOffer.Domain.Models.Empresa", null)
                        .WithMany("Vagas")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobOffer.Domain.Models.Estado", null)
                        .WithMany("Vagas")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobOffer.Domain.Models.Recrutador", null)
                        .WithMany("Vagas")
                        .HasForeignKey("RecrutadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
